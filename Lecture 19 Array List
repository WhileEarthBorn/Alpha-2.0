import java.util.*;
public class Lecture19_ArraysList {
    public static boolean PairSum(ArrayList<Integer> pair,int target){
        int f = 0;
        int l = pair.size()-1;
        while(f<l){    
            if(pair.get(f)+pair.get(l)==target){
                return true;
            }
            else if(pair.get(f)+pair.get(l)<target){
                f++;
            }else{
                l--;
            }
        }
        return false;
    }

    // Question- Conatiner with the most Water:-
    public static int MostWater(ArrayList<Integer> height){
    int max = 0;
        int lp = 0;
        int rp = height.size()-1;
        while(lp<rp){    
            int ht = Math.min(height.get(lp), height.get(rp));
            int water = rp-lp;
            int curr = ht*water;
            max = Math.max(max, curr);
            if(height.get(lp)<height.get(rp)){
                    lp++;
                }
                else{
                    rp--;
                }
        }
        return max;
    }
    public static void main(String[] args) {
        // Exporting: 
        // Look this is not neccessary that u write integer only it basically,
        // based on the primitive data types of the function. 
        ArrayList<Integer> list = new ArrayList<>();
        ArrayList<Integer> li = new ArrayList<>();
        ArrayList<Integer> lo = new ArrayList<>();
        ArrayList<Integer> io = new ArrayList<>();
        
        // the arraylist has some operation:
        System.out.println("Add element: ");
        // 1). Add element:-
        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(5);

        li.add(1);
        li.add(2);
        li.add(3);
        li.add(4);
        li.add(5);

        lo.add(1);
        lo.add(2);
        lo.add(3);
        lo.add(4);
        lo.add(5);
        
        io.add(1);
        io.add(2);
        io.add(3);
        io.add(4);
        io.add(5);

        System.out.println(list);
        System.out.println();

        // 2). Get element:-
        System.out.println("Get element: ");
        int element = list.get(3);
        System.out.println(element); 
        System.out.println();

        // 3). Remove element:-
        System.out.println("Remove element: ");
        list.remove(2);
        System.out.println(list);
        System.out.println();

        // 4). Set element at index
        System.out.println("Set element at index: ");
        list.set(1, 0);
        System.out.println(list);
        System.out.println();

        // 5). Contains element:- 
        System.out.println("Contains element: "+"\n");
        System.out.println(list.contains(2));
        System.out.println();
        System.out.println(list.contains(1));
        System.out.println();

        // Getting the size of an ArrayList:-
        System.out.println("Printing the size of the ArrayList: ");
        System.out.println(list.size());
        System.out.println();

        // printing in reverse order of an Arraylist:-
        System.out.println("Printing the reverse order of an ArrayList: ");
        for(int i = list.size()-1; i>=0; i--){
            System.out.print(list.get(i)+" ");
        }
        System.out.println();
        System.out.println();

        // Printing the greatest value in an ArrayList:-
        System.out.println("Print the greatest value in the ArrayList: ");
        int max = Integer.MIN_VALUE;
        for(int i = 0; i<list.size(); i++){
            if(list.get(i)>max){
                max = list.get(i);
            }
        }
        System.out.println(max);
        System.out.println();

        // Sorting of an ArrayList:-
        System.out.println("Sorting of an ArrayList in ascending order: ");
        System.out.println(list);
        Collections.sort(list);
        System.out.println(list+"\n");
        System.out.println("Sorting of an ArrayList in descending order:");
        Collections.sort(list, Collections.reverseOrder());
        System.out.println(list);
        System.out.println();

        System.out.println("Creating Multi Dimensional ArrayList: ");
        // Creating Multi Dimensional ArrayList:-
        ArrayList<ArrayList<Integer>> lis = new ArrayList<>();
        lis.add(list);
        lis.add(li);
        lis.add(lo);
        lis.add(io);
        for(int i = 0;i<lis.size(); i++){
            System.out.println(lis.get(i)+" ");
        }
        System.out.println();

        System.out.println("Pair Sum 1: ");
        
        if(PairSum(io,5)){
            System.out.println("Sum found");
        }

        else{
            System.out.println("Sum not found");
        }
        System.out.println();

    }
}
